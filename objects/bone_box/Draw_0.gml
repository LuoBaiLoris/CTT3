draw_set_color(color)
surface_set_target(Battle_GetBoardSurface())
//draw_set_alpha(0.5)
//draw_rectangle(x1, y1, x2, y2, false)
draw_set_alpha(1)
//draw_rectangle(x1, y1, x2, y2, true)
if(dir=DIR.UP){
	x1 = ((battle_board.x - battle_board.left) + 1)
	y1 = (((battle_board.y - battle_board.up) + length) - 1)
	x2 = ((battle_board.x + battle_board.right) - 2)
	y2 = (battle_board.y - battle_board.up)
}
if(dir=DIR.DOWN){
	x1 = ((battle_board.x - battle_board.left) + 1)
	y1 = (((battle_board.y + battle_board.down) - length) + 1)
	x2 = ((battle_board.x + battle_board.right) - 2)
	y2 = ((battle_board.y + battle_board.down) - 2)
}
if(dir=DIR.LEFT){
	x1 = ((battle_board.x - battle_board.left) + 1)
	y1 = ((battle_board.y - battle_board.up) + 1)
	x2 = (((battle_board.x - battle_board.left) + length) - 2)
	y2 = ((battle_board.y + battle_board.down) - 2)
}
if(dir=DIR.RIGHT){
	x1 = ((battle_board.x + battle_board.right) - 1)
	y1 = ((battle_board.y - battle_board.up) + 1)
	x2 = ((battle_board.x + battle_board.right) - length)
	y2 = ((battle_board.y + battle_board.down) - 2)
}
angle1=battle_board.angle+point_direction(battle_board.x,battle_board.y,x1,y1)
angle2=battle_board.angle+point_direction(battle_board.x,battle_board.y,x1,y2)
angle3=battle_board.angle+point_direction(battle_board.x,battle_board.y,x2,y1)
angle4=battle_board.angle+point_direction(battle_board.x,battle_board.y,x2,y2)
dis1=point_distance(320,320,x1,y1)
dis2=point_distance(320,320,x1,y2)
dis3=point_distance(320,320,x2,y1)
dis4=point_distance(320,320,x2,y2)
x11=battle_board.x+lengthdir_x(dis1,angle1)
y11=battle_board.y+lengthdir_y(dis1,angle1)
x22=battle_board.x+lengthdir_x(dis2,angle2)
y22=battle_board.y+lengthdir_y(dis2,angle2)
x33=battle_board.x+lengthdir_x(dis3,angle3)
y33=battle_board.y+lengthdir_y(dis3,angle3)
x44=battle_board.x+lengthdir_x(dis4,angle4)
y44=battle_board.y+lengthdir_y(dis4,angle4)
draw_line(x11,y11,x22,y22)
draw_line(x11,y11,x33,y33)
draw_line(x22,y22,x44,y44)
draw_line(x33,y33,x44,y44)
surface_reset_target()